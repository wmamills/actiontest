# This is a basic workflow to help you get started with Actions

name: test1

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, exp-1 ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Hello World
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: OS and Machine info
        run: |
          echo "user: $(whoami)"
          echo "pwd: $(pwd)"
          git describe || true
          git log -n 1 --oneline HEAD
          cat /etc/os-release
          free -h
          lscpu
          lsblk
          df -h

      # Runs a single command using the runners shell
      - name: Sleep to see it run
        run: sleep 30


  build-macos:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Hello World
        run: echo Hello, world from build2

      # Runs a set of commands using the runners shell
      - name: OS and machine info
        run: |
          echo "user: $(whoami)"
          echo "pwd: $(pwd)"
          git describe || true
          git log -n 1 --oneline HEAD
          sw_vers
          echo "RAM:  $(( $(sysctl -n hw.memsize) / 1024 ** 3 )) GB"
          echo "CPUs: $(sysctl -n hw.ncpu)"
          df -h
